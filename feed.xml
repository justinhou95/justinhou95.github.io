<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://justinhou95.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://justinhou95.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-07-15T09:31:11+00:00</updated><id>https://justinhou95.github.io/feed.xml</id><title type="html">blank</title><entry><title type="html">Install Python on Linux without Sudo</title><link href="https://justinhou95.github.io/blog/2024/install-python/" rel="alternate" type="text/html" title="Install Python on Linux without Sudo"/><published>2024-04-20T15:12:00+00:00</published><updated>2024-04-20T15:12:00+00:00</updated><id>https://justinhou95.github.io/blog/2024/install-python</id><content type="html" xml:base="https://justinhou95.github.io/blog/2024/install-python/"><![CDATA[<p>I was running my machine learning project on a Linux server and needed to install Python 3.8 for some packages. I decided to install natively to keep everything under control, see this nice <a href="https://www.bitecode.dev/p/installing-python-the-bare-minimum">blog</a>. Without sudo right, things get a little different from standard installation but I found this nice <a href="https://www.bobbydurrettdba.com/2020/02/11/python-3-8-1-linux-install-without-root/">blog</a> by Bobby Durrett making this super simple.</p> <ul> <li>Download the python from <a href="https://www.python.org">www.python.org</a></li> </ul> <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">[hous@ada-25:Downloads] $</span><span class="w"> </span>wget https://www.python.org/ftp/python/3.8.18/Python-3.8.18.tgz
<span class="gp">Python-3.8.18.tgz   100%[===================&gt;</span><span class="o">]</span>  26.07M  <span class="nt">--</span>.-KB/s    <span class="k">in </span>0.1s    
<span class="go">2024-04-20 12:36:05 (230 MB/s) - ‘Python-3.8.18.tgz’ saved [27337549/27337549]
</span><span class="gp">[hous@ada-25:Downloads] $</span><span class="w"> 
</span></code></pre></div></div> <ul> <li>Unzip it</li> <li>Go to the folder</li> </ul> <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">[hous@ada-25:Downloads] $</span><span class="w"> </span><span class="nb">tar </span>zxfv Python-3.8.18.tgz 
<span class="go">Python-3.8.18/
Python-3.8.18/Lib/
</span><span class="c">......
</span><span class="go">Python-3.8.18/config.guess
Python-3.8.18/Makefile.pre.in
</span><span class="gp">[hous@ada-25:Downloads] $</span><span class="w"> </span><span class="nb">cd </span>Python-3.8.18/
<span class="gp">[hous@ada-25:Python-3.8.18] $</span><span class="w"> 
</span></code></pre></div></div> <ul> <li>Check the absolute path of home directory</li> <li>Make a directory where you want to put your python. I called my <code>.localpython3.8</code> (name it whatever you want) and make it under the home directory.</li> <li>Configured the Python make</li> </ul> <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">[hous@ada-25:Python-3.8.18] $</span><span class="w"> </span><span class="nb">pwd</span>
<span class="go">/u/hous/Downloads/Python-3.8.18
</span><span class="gp">[hous@ada-25:Python-3.8.18] $</span><span class="w"> </span><span class="nb">mkdir</span> /u/hous/.localpython3.8
<span class="gp">[hous@ada-25:Python-3.8.18] $</span><span class="w"> </span>./configure <span class="nt">--prefix</span><span class="o">=</span>/u/hous/.localpython3.8
<span class="go">checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
</span><span class="c">......
</span><span class="go">creating Modules/Setup.local
creating Makefile
If you want a release build with all stable optimizations active (PGO, etc),
please run ./configure --enable-optimizations
</span><span class="gp">[hous@ada-25:Python-3.8.18] $</span><span class="w"> 
</span></code></pre></div></div> <ul> <li>Make and make altinstall (see difference between install and altinstall <a href="https://stackoverflow.com/questions/16018463/difference-in-details-between-make-install-and-make-altinstall">here</a>)</li> </ul> <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">[hous@ada-25:Python-3.8.18] $</span><span class="w"> </span>make
<span class="go">gcc -c -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall  
</span><span class="c">...
</span><span class="gp">[hous@ada-25:Python-3.8.18] $</span><span class="w"> </span>make altinstall
<span class="c">......
</span><span class="go">Successfully installed pip-23.0.1 setuptools-56.0.0
</span><span class="gp">[hous@ada-25:Python-3.8.18] $</span><span class="w"> 
</span></code></pre></div></div> <p>Now we can already use <code>~/.localpython3.8/bin/python3.8</code> to run python</p> <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">[hous@ada-25:~] $</span><span class="w"> </span>~/.localpython3.8/bin/python3.8
<span class="go">Python 3.8.18 (default, Apr 20 2024, 12:51:15) 
[GCC 13.2.1 20240316 (Red Hat 13.2.1-7)] on linux
Type "help", "copyright", "credits" or "license" for more information.
</span><span class="gp">&gt;</span><span class="o">&gt;&gt;</span> <span class="nb">exit</span><span class="o">()</span>
<span class="gp">[hous@ada-25:~] $</span><span class="w"> 
</span></code></pre></div></div> <p>Perfect! Just to make life easier, we go to <code>~/.localpython3.8/bin/</code> and link <code>python3.8</code> to <code>python</code></p> <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">[hous@ada-25:Python-3.8.18] $</span><span class="w"> </span><span class="nb">cd</span> ~/.localpython3.8/bin
<span class="gp">[hous@ada-25:bin] $</span><span class="w"> </span><span class="nb">ln</span> <span class="nt">-s</span> python3.8 python
<span class="gp">[hous@ada-25:bin] $</span><span class="w"> </span><span class="nb">ln</span> <span class="nt">-s</span> pip3.8 pip
<span class="gp">[hous@ada-25:bin] $</span><span class="w"> 
</span></code></pre></div></div> <p>Now, we only need to type <code>~/.localpython3.8/bin/python</code>. Still a bit inconvenient, so next we add the folder path to PATH variable (abundant nice tutorial online explaining this). This is not just for convenient but avoid you running the wrong python.</p> <p><code>export PATH=/u/hous/.localpython3.8/bin:$PATH</code> to <code>.bashrc</code> file.</p> <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">[hous@ada-25:Python-3.8.18] $</span><span class="w"> </span><span class="nb">cd</span> ~
<span class="gp">[hous@ada-25:~] $</span><span class="w"> </span>vi .bashrc
<span class="gp">#</span><span class="w"> </span>user<span class="s1">'s bashrc
</span><span class="gp">#</span><span class="w">
</span><span class="gp">export PATH=/u/hous/.localpython3.8/bin:$</span><span class="s1">PATH
</span><span class="c">...
</span><span class="gp">[hous@ada-25:~] $</span><span class="w">
</span></code></pre></div></div> <p>After this, we logout and login. Now we can simply type <code>python</code> and check the installation.</p> <div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">[hous@ada-25:~] $</span><span class="w"> </span>python
<span class="go">Python 3.8.18 (default, Apr 20 2024, 12:51:15) 
[GCC 13.2.1 20240316 (Red Hat 13.2.1-7)] on linux
Type "help", "copyright", "credits" or "license" for more information.
</span><span class="gp">&gt;</span><span class="o">&gt;&gt;</span> <span class="nb">exit</span><span class="o">()</span>
<span class="gp">[hous@ada-25:~] $</span><span class="w"> </span>pip <span class="nt">-V</span>
<span class="go">pip 23.0.1 from /u/hous/.localpython3.8/lib/python3.8/site-packages/pip (python 3.8)
</span><span class="gp">[hous@ada-25:~] $</span><span class="w"> </span>pip list
<span class="go">Package    Version
---------- -------
pip        23.0.1
setuptools 56.0.0

</span><span class="gp">[notice] A new release of pip is available: 23.0.1 -&gt;</span><span class="w"> </span>24.0
<span class="go">[notice] To update, run: pip install --upgrade pip
</span><span class="gp">[hous@ada-25:~] $</span><span class="w"> 
</span></code></pre></div></div> <p>We are done! I usually then create a virtual environment and play with my machine learning codes, see <a href="https://www.b-list.org/weblog/2022/may/13/boring-python-dependencies/">here</a> why venv is a good idea.</p> <h2 id="reference">Reference</h2> <ul> <li><a href="https://pages.github.nceas.ucsb.edu/NCEAS/Computing/local_install_python_on_a_server.html">https://pages.github.nceas.ucsb.edu/NCEAS/Computing/local_install_python_on_a_server.html</a></li> <li><a href="https://www.bobbydurrettdba.com/2020/02/11/python-3-8-1-linux-install-without-root/">https://www.bobbydurrettdba.com/2020/02/11/python-3-8-1-linux-install-without-root/</a></li> <li><a href="https://thelazylog.com/install-python-as-local-user-on-linux/">https://thelazylog.com/install-python-as-local-user-on-linux/</a></li> </ul>]]></content><author><name></name></author><summary type="html"><![CDATA[I was running my machine learning project on a Linux server and needed to install Python 3.8 for some packages. I decided to install natively to keep everything under control, see this nice blog. Without sudo right, things get a little different from standard installation but I found this nice blog by Bobby Durrett making this super simple.]]></summary></entry><entry><title type="html">Mass splitting under adapted Wasserstein distance</title><link href="https://justinhou95.github.io/blog/2024/mass-split/" rel="alternate" type="text/html" title="Mass splitting under adapted Wasserstein distance"/><published>2024-04-08T15:12:00+00:00</published><updated>2024-04-08T15:12:00+00:00</updated><id>https://justinhou95.github.io/blog/2024/mass-split</id><content type="html" xml:base="https://justinhou95.github.io/blog/2024/mass-split/"><![CDATA[<p>In classical optimal transport, simply by Jensen’s inequality we have</p> \[\mathcal{W}_1(\frac{1}{N}\sum_{n=1}^N \mu_n, \frac{1}{N}\sum_{n=1}^N \nu_n) \leq \frac{1}{N}\sum_{n=1}^N \mathcal{W}_1(\mu_n, \nu_n).\] <p>However in adapted optimal transport, this is in general not true. A simple counter example is by taking \(\mu_1 = \delta_{(0,1)}\), \(\mu_2 = \delta_{(0,-1)}\), \(\nu_1 = \delta_{(\varepsilon,1)}\), \(\nu_2 = \delta_{(-\varepsilon,-1)}\). Then we have</p> \[\mathcal{AW}_1(\frac{1}{N}\sum_{n=1}^N \mu_n, \frac{1}{N}\sum_{n=1}^N \nu_n) = 1-\varepsilon &gt; \varepsilon = \frac{1}{N}\sum_{n=1}^N \mathcal{AW}_1(\mu_n, \nu_n).\] <p>Conjecture: under some regularity conditions (quantified by \(\epsilon\)), we have</p> \[\mathcal{AW}_1(\frac{1}{N}\sum_{n=1}^N \mu_n, \frac{1}{N}\sum_{n=1}^N \nu_n) \leq \frac{1}{N}\sum_{n=1}^N \mathcal{AW}_1(\mu_n, \nu_n) + C_\epsilon.\]]]></content><author><name></name></author><summary type="html"><![CDATA[In classical optimal transport, simply by Jensen’s inequality we have]]></summary></entry></feed>